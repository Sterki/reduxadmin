{"ast":null,"code":"import { BEGIN_GET_USERDATA, GET_USERDATA_OK, GET_USERDATA_ERROR } from '../types/index';\nimport clienteAxios from '../config/axios';\nexport function getUserDataAction() {\n  return async dispatch => {\n    dispatch(getuserData());\n\n    try {\n      const resultado = await clienteAxios.get('/users');\n      console.log(resultado);\n      dispatch(getUserDataOk(resultado.data));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\n\nconst getuserData = () => ({\n  type: BEGIN_GET_USERDATA\n});\n\nconst getUserDataOk = dbdatos => ({\n  type: GET_USERDATA_OK,\n  payload: dbdatos\n});","map":{"version":3,"sources":["C:/Users/alexr/Desktop/reduxadminister/cliente/src/actions/userAction.js"],"names":["BEGIN_GET_USERDATA","GET_USERDATA_OK","GET_USERDATA_ERROR","clienteAxios","getUserDataAction","dispatch","getuserData","resultado","get","console","log","getUserDataOk","data","error","type","dbdatos","payload"],"mappings":"AAAA,SAAQA,kBAAR,EACQC,eADR,EAEQC,kBAFR,QAGO,gBAHP;AAIA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAO,SAASC,iBAAT,GAA4B;AAE/B,SAAO,MAAMC,QAAN,IAAkB;AAEjBA,IAAAA,QAAQ,CAAEC,WAAW,EAAb,CAAR;;AACA,QAAI;AACA,YAAMC,SAAS,GAAG,MAAMJ,YAAY,CAACK,GAAb,CAAiB,QAAjB,CAAxB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AACAF,MAAAA,QAAQ,CAAEM,aAAa,CAACJ,SAAS,CAACK,IAAX,CAAf,CAAR;AACH,KAJD,CAIE,OAAOC,KAAP,EAAc;AACZJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACH;AACR,GAVD;AAWH;;AACD,MAAMP,WAAW,GAAG,OAAO;AAEvBQ,EAAAA,IAAI,EAAEd;AAFiB,CAAP,CAApB;;AAIA,MAAMW,aAAa,GAAII,OAAD,KAAc;AAEhCD,EAAAA,IAAI,EAAEb,eAF0B;AAGhCe,EAAAA,OAAO,EAAED;AAHuB,CAAd,CAAtB","sourcesContent":["import {BEGIN_GET_USERDATA, \r\n        GET_USERDATA_OK, \r\n        GET_USERDATA_ERROR\r\n} from '../types/index';\r\nimport clienteAxios from '../config/axios';\r\nexport function getUserDataAction(){\r\n\r\n    return async(dispatch) =>{\r\n\r\n            dispatch( getuserData() )\r\n            try {   \r\n                const resultado = await clienteAxios.get('/users');    \r\n                console.log(resultado);        \r\n                dispatch( getUserDataOk(resultado.data) )  ;                          \r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n    }\r\n}\r\nconst getuserData = () => ({\r\n\r\n    type: BEGIN_GET_USERDATA,\r\n})\r\nconst getUserDataOk = (dbdatos) => ({\r\n\r\n    type: GET_USERDATA_OK,\r\n    payload: dbdatos\r\n\r\n})"]},"metadata":{},"sourceType":"module"}