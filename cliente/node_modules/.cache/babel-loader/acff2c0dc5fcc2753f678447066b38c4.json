{"ast":null,"code":"import { BEGIN_GET_USERDATA, GET_USERDATA_OK, GET_USERDATA_ERROR, COMIENZA_LOGIN, LOGIN_EXITOSO, LOGIN_ERROR, OCULTAR_ERROR, MOSTRAR_ERROR, MOSTRAR_USUARIO, MOSTRAR_CREA_USUARIO, OBTIENE_ALL_USERS, COMIENZA_CREA_USUARIO, CERRAR_SESION, ELIMINAR_USUARIO, OBTIENE_USUARIO_ELIMINAR, CREA_USUARIOS_EXITO } from '../types/index';\nimport clienteAxios from '../config/axios';\nimport tokenAuth from '../config/tokenAuth';\nimport { useDispatch } from 'react-redux';\nexport function mostrarErrorAction(msg, categoria) {\n  const alerta = {\n    msg,\n    categoria\n  };\n  return dispatch => {\n    dispatch(mostraError(alerta));\n  };\n}\n\nconst mostraError = alerta => ({\n  type: MOSTRAR_ERROR,\n  payload: alerta\n});\n\nexport function ocultarAlertAction() {\n  return dispatch => {\n    dispatch(ocultarAlerta());\n  };\n}\n\nconst ocultarAlerta = () => ({\n  type: OCULTAR_ERROR\n});\n\nexport function loginUsuarioaction(datos) {\n  return async dispatch => {\n    dispatch(comienzaLogin());\n\n    try {\n      const resultado = await clienteAxios.post('/api/auth', datos); // console.log(resultado);\n\n      dispatch(loginExitoso(resultado.data));\n      dispatch(obtieneUsuarioAction());\n    } catch (error) {\n      console.log(error.response);\n      dispatch(loginError(error.response.data.msg));\n    }\n  };\n}\n\nconst comienzaLogin = () => ({\n  type: COMIENZA_LOGIN\n});\n\nconst loginExitoso = token => ({\n  type: LOGIN_EXITOSO,\n  payload: token\n});\n\nconst loginError = error => ({\n  type: LOGIN_ERROR,\n  payload: {\n    msg: error,\n    categoria: \"alert-error\"\n  }\n});\n\nexport function obtieneUsuarioAction() {\n  const token = localStorage.getItem('token');\n\n  if (token) {\n    tokenAuth(token);\n  }\n\n  return async dispatch => {\n    try {\n      const resultado = await clienteAxios.get('/api/auth');\n      dispatch(obtieneUsuario(resultado.data));\n    } catch (error) {\n      console.log(error.response);\n    }\n  };\n}\n\nconst obtieneUsuario = datos => ({\n  type: GET_USERDATA_OK,\n  payload: datos\n});\n\nexport function mostrarUsuarioAction() {\n  return dispatch => {\n    dispatch(mostrarUsuario());\n  };\n}\n\nconst mostrarUsuario = () => ({\n  type: MOSTRAR_USUARIO\n});\n\nexport function mostrarCreaUsuariosAction() {\n  return dispatch => {\n    dispatch(mostrarCreaUsuario());\n  };\n}\n\nconst mostrarCreaUsuario = () => ({\n  type: MOSTRAR_CREA_USUARIO\n});\n\nexport function obtenerallUsers() {\n  const token = localStorage.getItem('token');\n\n  if (token) {\n    tokenAuth(token);\n  }\n\n  return async dispatch => {\n    try {\n      const resultado = await clienteAxios.get('/api/users');\n      console.log(resultado.data);\n      dispatch(obtieneAllUsuarios(resultado.data));\n    } catch (error) {\n      console.log(error.response);\n    }\n  };\n}\n\nconst obtieneAllUsuarios = usuarios => ({\n  type: OBTIENE_ALL_USERS,\n  payload: usuarios\n});\n\nexport function creaUsuariosAction(datos) {\n  return async dispatch => {\n    dispatch(ComienzaCreaNuevoUsuario(datos));\n\n    try {\n      const resultado = await clienteAxios.post('/api/users', datos);\n      dispatch(creaUsuarioExito());\n    } catch (error) {\n      console.log(error.response);\n    }\n  };\n}\n\nconst ComienzaCreaNuevoUsuario = datos => ({\n  type: COMIENZA_CREA_USUARIO,\n  payload: datos\n});\n\nconst creaUsuarioExito = () => ({\n  type: CREA_USUARIOS_EXITO\n});\n\nexport function cerrarSesionAction() {\n  return dispatch => {\n    dispatch(cerrarSesion());\n  };\n}\n\nconst cerrarSesion = () => ({\n  type: CERRAR_SESION\n});\n\nexport function eliminarUsuarioAction(usuarioid) {\n  return async dispatch => {\n    dispatch(obtieneEliminarUsuario(usuarioid));\n\n    try {\n      await clienteAxios.delete(`/api/users/${usuarioid}`);\n      dispatch(eliminaUsuario());\n    } catch (error) {\n      console.log(error.response);\n    }\n  };\n}\n\nconst obtieneEliminarUsuario = usuarioid => ({\n  type: OBTIENE_USUARIO_ELIMINAR,\n  payload: usuarioid\n});\n\nconst eliminaUsuario = () => ({\n  type: ELIMINAR_USUARIO\n});","map":{"version":3,"sources":["C:/Users/alexr/Desktop/reduxadminister/cliente/src/actions/userAction.js"],"names":["BEGIN_GET_USERDATA","GET_USERDATA_OK","GET_USERDATA_ERROR","COMIENZA_LOGIN","LOGIN_EXITOSO","LOGIN_ERROR","OCULTAR_ERROR","MOSTRAR_ERROR","MOSTRAR_USUARIO","MOSTRAR_CREA_USUARIO","OBTIENE_ALL_USERS","COMIENZA_CREA_USUARIO","CERRAR_SESION","ELIMINAR_USUARIO","OBTIENE_USUARIO_ELIMINAR","CREA_USUARIOS_EXITO","clienteAxios","tokenAuth","useDispatch","mostrarErrorAction","msg","categoria","alerta","dispatch","mostraError","type","payload","ocultarAlertAction","ocultarAlerta","loginUsuarioaction","datos","comienzaLogin","resultado","post","loginExitoso","data","obtieneUsuarioAction","error","console","log","response","loginError","token","localStorage","getItem","get","obtieneUsuario","mostrarUsuarioAction","mostrarUsuario","mostrarCreaUsuariosAction","mostrarCreaUsuario","obtenerallUsers","obtieneAllUsuarios","usuarios","creaUsuariosAction","ComienzaCreaNuevoUsuario","creaUsuarioExito","cerrarSesionAction","cerrarSesion","eliminarUsuarioAction","usuarioid","obtieneEliminarUsuario","delete","eliminaUsuario"],"mappings":"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","sourcesContent":["import {BEGIN_GET_USERDATA, \r\n        GET_USERDATA_OK, \r\n        GET_USERDATA_ERROR,\r\n        COMIENZA_LOGIN,\r\n        LOGIN_EXITOSO,\r\n        LOGIN_ERROR,\r\n        OCULTAR_ERROR,\r\n        MOSTRAR_ERROR,\r\n        MOSTRAR_USUARIO,\r\n        MOSTRAR_CREA_USUARIO,\r\n        OBTIENE_ALL_USERS,\r\n        COMIENZA_CREA_USUARIO,\r\n        CERRAR_SESION,\r\n        ELIMINAR_USUARIO,\r\n        OBTIENE_USUARIO_ELIMINAR,\r\n        CREA_USUARIOS_EXITO\r\n} from '../types/index';\r\nimport clienteAxios from '../config/axios';\r\nimport tokenAuth from '../config/tokenAuth';\r\nimport {useDispatch} from 'react-redux';\r\n\r\nexport function mostrarErrorAction(msg, categoria){\r\n        const alerta = {\r\n\r\n                msg,\r\n                categoria                \r\n        }\r\n        return(dispatch)=>{\r\n\r\n                dispatch( mostraError(alerta) );               \r\n        }\r\n}\r\nconst mostraError = (alerta) => ({\r\n\r\n        type: MOSTRAR_ERROR,\r\n        payload: alerta\r\n})\r\n\r\nexport function ocultarAlertAction(){\r\n\r\n        return(dispatch)=>{\r\n\r\n                dispatch( ocultarAlerta() ); \r\n        }\r\n}\r\nconst ocultarAlerta = () => ({\r\n\r\n        type: OCULTAR_ERROR\r\n})\r\n\r\n\r\nexport function loginUsuarioaction(datos){\r\n\r\n        return async(dispatch)=>{\r\n                \r\n                dispatch( comienzaLogin() );\r\n                try {\r\n                        const resultado = await clienteAxios.post('/api/auth', datos);\r\n                        // console.log(resultado);\r\n                        dispatch( loginExitoso(resultado.data) );  \r\n                        dispatch( obtieneUsuarioAction() );    \r\n                } catch (error) {\r\n                        console.log(error.response)\r\n                        dispatch( loginError(error.response.data.msg) );\r\n                }\r\n        }\r\n}\r\nconst comienzaLogin = () => ({\r\n\r\n        type: COMIENZA_LOGIN\r\n})\r\nconst loginExitoso = (token) => ({\r\n\r\n        type: LOGIN_EXITOSO,\r\n        payload: token\r\n})\r\nconst loginError = (error) => ({\r\n\r\n        type: LOGIN_ERROR,\r\n        payload: {\r\n\r\n                msg: error,\r\n                categoria: \"alert-error\"\r\n                \r\n        }\r\n})\r\nexport function obtieneUsuarioAction(){\r\n                const token = localStorage.getItem('token');\r\n                if(token){\r\n\r\n                        tokenAuth(token);\r\n                }\r\n        return async(dispatch)=>{\r\n                try {\r\n                        const resultado = await clienteAxios.get('/api/auth');\r\n                        dispatch( obtieneUsuario(resultado.data) );\r\n                } catch (error) {\r\n                        console.log(error.response)\r\n                }                \r\n        }\r\n}\r\nconst obtieneUsuario = (datos) => ({\r\n\r\n        type: GET_USERDATA_OK,\r\n        payload: datos\r\n})\r\n\r\nexport function mostrarUsuarioAction(){\r\n\r\n        return(dispatch)=>{\r\n\r\n                dispatch( mostrarUsuario() );\r\n\r\n        }\r\n}\r\nconst mostrarUsuario = () => ({\r\n\r\n        type: MOSTRAR_USUARIO\r\n})\r\nexport function mostrarCreaUsuariosAction(){\r\n\r\n        return(dispatch)=>{\r\n\r\n                dispatch(  mostrarCreaUsuario() );\r\n\r\n        }\r\n}\r\nconst mostrarCreaUsuario = () => ({\r\n\r\n        type: MOSTRAR_CREA_USUARIO\r\n})\r\n\r\nexport function obtenerallUsers(){\r\n\r\n        const token = localStorage.getItem('token');\r\n        if(token){\r\n\r\n                tokenAuth(token);\r\n        }\r\n\r\n        return async(dispatch)=>{\r\n\r\n                try {   \r\n                        const resultado = await clienteAxios.get('/api/users');\r\n                        console.log(resultado.data);\r\n                        dispatch( obtieneAllUsuarios(resultado.data) );\r\n                        \r\n                } catch (error) {\r\n                        console.log(error.response);\r\n                }\r\n        }\r\n}\r\nconst obtieneAllUsuarios = (usuarios) => ({\r\n\r\n        type: OBTIENE_ALL_USERS,\r\n        payload: usuarios\r\n        \r\n})\r\n\r\nexport function creaUsuariosAction(datos){\r\n\r\n       \r\n        return async(dispatch)=>{\r\n                                dispatch( ComienzaCreaNuevoUsuario(datos) );\r\n                        try {   \r\n                                const resultado = await clienteAxios.post('/api/users', datos);   \r\n                                dispatch( creaUsuarioExito() );\r\n                                                          \r\n                               \r\n                                \r\n                        } catch (error) {\r\n                                console.log(error.response)\r\n                        }\r\n                        \r\n        }\r\n}\r\nconst ComienzaCreaNuevoUsuario = (datos) => ({\r\n\r\n        type: COMIENZA_CREA_USUARIO,\r\n        payload: datos\r\n\r\n})\r\nconst creaUsuarioExito = () => ({\r\n\r\n        type: CREA_USUARIOS_EXITO\r\n})\r\n\r\n\r\nexport function cerrarSesionAction(){\r\n\r\n        return(dispatch)=>{\r\n\r\n                dispatch( cerrarSesion() );\r\n\r\n\r\n        }\r\n\r\n}\r\nconst cerrarSesion = () => ({\r\n\r\n        type: CERRAR_SESION\r\n\r\n\r\n})\r\n\r\nexport function eliminarUsuarioAction(usuarioid){\r\n\r\n        \r\n        return async(dispatch)=>{\r\n\r\n                        dispatch( obtieneEliminarUsuario(usuarioid) );\r\n                        try {\r\n                                await clienteAxios.delete(`/api/users/${usuarioid}`);   \r\n                                dispatch( eliminaUsuario() );\r\n                                \r\n\r\n                        }catch(error) {\r\n                                console.log(error.response)\r\n                        }\r\n        }\r\n}\r\nconst obtieneEliminarUsuario = (usuarioid) => ({\r\n\r\n        type: OBTIENE_USUARIO_ELIMINAR,\r\n        payload: usuarioid\r\n           \r\n})\r\nconst eliminaUsuario = () => ({\r\n\r\n        type: ELIMINAR_USUARIO\r\n\r\n})\r\n"]},"metadata":{},"sourceType":"module"}