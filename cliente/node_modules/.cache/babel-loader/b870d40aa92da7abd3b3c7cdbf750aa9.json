{"ast":null,"code":"import { BEGIN_GET_USERDATA, GET_USERDATA_OK, GET_USERDATA_ERROR, COMIENZA_LOGIN, LOGIN_EXITOSO, LOGIN_ERROR, OCULTAR_ERROR, MOSTRAR_ERROR } from '../types/index';\nimport clienteAxios from '../config/axios';\nimport tokenAuth from '../config/tokenAuth';\nexport function mostrarErrorAction(msg, categoria) {\n  const alerta = {\n    msg,\n    categoria\n  };\n  return dispatch => {\n    dispatch(mostraError(alerta));\n  };\n}\n\nconst mostraError = alerta => ({\n  type: MOSTRAR_ERROR,\n  payload: alerta\n});\n\nexport function ocultarAlertAction() {\n  return dispatch => {\n    dispatch(ocultarAlerta());\n  };\n}\n\nconst ocultarAlerta = () => ({\n  type: OCULTAR_ERROR\n});\n\nexport function loginUsuarioaction(datos) {\n  return async dispatch => {\n    dispatch(comienzaLogin());\n\n    try {\n      const resultado = await clienteAxios.post('/api/auth', datos);\n      console.log(resultado);\n      dispatch(loginExitoso(resultado.data));\n      obtieneUsuarioAction();\n    } catch (error) {\n      console.log(error.response);\n    }\n  };\n}\n\nconst comienzaLogin = () => ({\n  type: COMIENZA_LOGIN\n});\n\nconst loginExitoso = token => ({\n  type: LOGIN_EXITOSO,\n  payload: token\n});\n\nexport function obtieneUsuarioAction() {\n  return async dispath => {\n    const token = localStorage.getItem('token');\n    console.log(token);\n\n    if (token) {\n      tokenAuth(token);\n    }\n\n    dispath(comienzaObtieneUsuario());\n\n    try {\n      const resultado = await clienteAxios.get('/api/auth');\n      console.log(resultado);\n    } catch (error) {\n      console.log(error.response);\n    }\n  };\n}\n\nconst comienzaObtieneUsuario = () => ({});","map":{"version":3,"sources":["C:/Users/alexr/Desktop/reduxadminister/cliente/src/actions/userAction.js"],"names":["BEGIN_GET_USERDATA","GET_USERDATA_OK","GET_USERDATA_ERROR","COMIENZA_LOGIN","LOGIN_EXITOSO","LOGIN_ERROR","OCULTAR_ERROR","MOSTRAR_ERROR","clienteAxios","tokenAuth","mostrarErrorAction","msg","categoria","alerta","dispatch","mostraError","type","payload","ocultarAlertAction","ocultarAlerta","loginUsuarioaction","datos","comienzaLogin","resultado","post","console","log","loginExitoso","data","obtieneUsuarioAction","error","response","token","dispath","localStorage","getItem","comienzaObtieneUsuario","get"],"mappings":"AAAA,SAAQA,kBAAR,EACQC,eADR,EAEQC,kBAFR,EAGQC,cAHR,EAIQC,aAJR,EAKQC,WALR,EAMQC,aANR,EAOQC,aAPR,QAQO,gBARP;AASA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AAEA,OAAO,SAASC,kBAAT,CAA4BC,GAA5B,EAAiCC,SAAjC,EAA2C;AAC1C,QAAMC,MAAM,GAAG;AAEPF,IAAAA,GAFO;AAGPC,IAAAA;AAHO,GAAf;AAKA,SAAOE,QAAD,IAAY;AAEVA,IAAAA,QAAQ,CAAEC,WAAW,CAACF,MAAD,CAAb,CAAR;AACP,GAHD;AAIP;;AACD,MAAME,WAAW,GAAIF,MAAD,KAAa;AAEzBG,EAAAA,IAAI,EAAET,aAFmB;AAGzBU,EAAAA,OAAO,EAAEJ;AAHgB,CAAb,CAApB;;AAMA,OAAO,SAASK,kBAAT,GAA6B;AAE5B,SAAOJ,QAAD,IAAY;AAEVA,IAAAA,QAAQ,CAAEK,aAAa,EAAf,CAAR;AACP,GAHD;AAIP;;AACD,MAAMA,aAAa,GAAG,OAAO;AAErBH,EAAAA,IAAI,EAAEV;AAFe,CAAP,CAAtB;;AAKA,OAAO,SAASc,kBAAT,CAA4BC,KAA5B,EAAkC;AAGjC,SAAO,MAAMP,QAAN,IAAiB;AAEhBA,IAAAA,QAAQ,CAAEQ,aAAa,EAAf,CAAR;;AACA,QAAI;AACI,YAAMC,SAAS,GAAG,MAAMf,YAAY,CAACgB,IAAb,CAAkB,WAAlB,EAA+BH,KAA/B,CAAxB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AACAT,MAAAA,QAAQ,CAAEa,YAAY,CAACJ,SAAS,CAACK,IAAX,CAAd,CAAR;AACAC,MAAAA,oBAAoB;AAC3B,KALD,CAKE,OAAOC,KAAP,EAAc;AACRL,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAK,CAACC,QAAlB;AACP;AACR,GAXD;AAYP;;AACD,MAAMT,aAAa,GAAG,OAAO;AAErBN,EAAAA,IAAI,EAAEb;AAFe,CAAP,CAAtB;;AAIA,MAAMwB,YAAY,GAAIK,KAAD,KAAY;AAEzBhB,EAAAA,IAAI,EAAEZ,aAFmB;AAGzBa,EAAAA,OAAO,EAAEe;AAHgB,CAAZ,CAArB;;AAMA,OAAO,SAASH,oBAAT,GAA+B;AAG9B,SAAO,MAAMI,OAAN,IAAgB;AAEf,UAAMD,KAAK,GAAGE,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;;AACA,QAAGA,KAAH,EAAS;AAEDvB,MAAAA,SAAS,CAACuB,KAAD,CAAT;AACP;;AACDC,IAAAA,OAAO,CAAEG,sBAAsB,EAAxB,CAAP;;AAEA,QAAI;AAEI,YAAMb,SAAS,GAAG,MAAMf,YAAY,CAAC6B,GAAb,CAAiB,WAAjB,CAAxB;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AAEP,KALD,CAKE,OAAOO,KAAP,EAAc;AACRL,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAK,CAACC,QAAlB;AACP;AAER,GAnBD;AAoBP;;AACD,MAAMK,sBAAsB,GAAG,OAAO,EAAP,CAA/B","sourcesContent":["import {BEGIN_GET_USERDATA, \r\n        GET_USERDATA_OK, \r\n        GET_USERDATA_ERROR,\r\n        COMIENZA_LOGIN,\r\n        LOGIN_EXITOSO,\r\n        LOGIN_ERROR,\r\n        OCULTAR_ERROR,\r\n        MOSTRAR_ERROR\r\n} from '../types/index';\r\nimport clienteAxios from '../config/axios';\r\nimport tokenAuth from '../config/tokenAuth';\r\n\r\nexport function mostrarErrorAction(msg, categoria){\r\n        const alerta = {\r\n\r\n                msg,\r\n                categoria                \r\n        }\r\n        return(dispatch)=>{\r\n\r\n                dispatch( mostraError(alerta) );               \r\n        }\r\n}\r\nconst mostraError = (alerta) => ({\r\n\r\n        type: MOSTRAR_ERROR,\r\n        payload: alerta\r\n})\r\n\r\nexport function ocultarAlertAction(){\r\n\r\n        return(dispatch)=>{\r\n\r\n                dispatch( ocultarAlerta() ); \r\n        }\r\n}\r\nconst ocultarAlerta = () => ({\r\n\r\n        type: OCULTAR_ERROR\r\n})\r\n\r\nexport function loginUsuarioaction(datos){\r\n\r\n\r\n        return async(dispatch)=>{\r\n\r\n                dispatch( comienzaLogin() );\r\n                try {\r\n                        const resultado = await clienteAxios.post('/api/auth', datos);\r\n                        console.log(resultado);\r\n                        dispatch( loginExitoso(resultado.data) );  \r\n                        obtieneUsuarioAction();                    \r\n                } catch (error) {\r\n                        console.log(error.response)\r\n                }\r\n        }\r\n}\r\nconst comienzaLogin = () => ({\r\n\r\n        type: COMIENZA_LOGIN\r\n})\r\nconst loginExitoso = (token) => ({\r\n\r\n        type: LOGIN_EXITOSO,\r\n        payload: token\r\n})\r\n\r\nexport function obtieneUsuarioAction(){\r\n\r\n        \r\n        return async(dispath)=>{  \r\n\r\n                const token = localStorage.getItem('token');\r\n                console.log(token);\r\n                if(token){\r\n\r\n                        tokenAuth(token);\r\n                }\r\n                dispath( comienzaObtieneUsuario() );\r\n                \r\n                try {   \r\n                        \r\n                        const resultado = await clienteAxios.get('/api/auth');\r\n                        console.log(resultado);\r\n\r\n                } catch (error) {\r\n                        console.log(error.response)\r\n                }\r\n\r\n        }\r\n}\r\nconst comienzaObtieneUsuario = () => ({\r\n\r\n\r\n})"]},"metadata":{},"sourceType":"module"}