{"ast":null,"code":"import { BEGIN_GET_USERDATA, GET_USERDATA_OK, GET_USERDATA_ERROR, COMIENZA_LOGIN, LOGIN_EXITOSO, LOGIN_ERROR, OCULTAR_ERROR, MOSTRAR_ERROR, MOSTRAR_USUARIO, MOSTRAR_CREA_USUARIO, OBTIENE_ALL_USERS } from '../types/index';\nimport clienteAxios from '../config/axios';\nimport tokenAuth from '../config/tokenAuth';\nimport { useDispatch } from 'react-redux';\nexport function mostrarErrorAction(msg, categoria) {\n  const alerta = {\n    msg,\n    categoria\n  };\n  return dispatch => {\n    dispatch(mostraError(alerta));\n  };\n}\n\nconst mostraError = alerta => ({\n  type: MOSTRAR_ERROR,\n  payload: alerta\n});\n\nexport function ocultarAlertAction() {\n  return dispatch => {\n    dispatch(ocultarAlerta());\n  };\n}\n\nconst ocultarAlerta = () => ({\n  type: OCULTAR_ERROR\n});\n\nexport function loginUsuarioaction(datos) {\n  return async dispatch => {\n    dispatch(comienzaLogin());\n\n    try {\n      const resultado = await clienteAxios.post('/api/auth', datos); // console.log(resultado);\n\n      dispatch(loginExitoso(resultado.data));\n      dispatch(obtieneUsuarioAction());\n    } catch (error) {\n      console.log(error.response);\n    }\n  };\n}\n\nconst comienzaLogin = () => ({\n  type: COMIENZA_LOGIN\n});\n\nconst loginExitoso = token => ({\n  type: LOGIN_EXITOSO,\n  payload: token\n});\n\nexport function obtieneUsuarioAction() {\n  const token = localStorage.getItem('token');\n\n  if (token) {\n    tokenAuth(token);\n  }\n\n  return async dispatch => {\n    try {\n      const resultado = await clienteAxios.get('/api/auth');\n      dispatch(obtieneUsuario(resultado.data));\n    } catch (error) {\n      console.log(error.response);\n    }\n  };\n}\n\nconst obtieneUsuario = datos => ({\n  type: GET_USERDATA_OK,\n  payload: datos\n});\n\nexport function mostrarUsuarioAction() {\n  return dispatch => {\n    dispatch(mostrarUsuario());\n  };\n}\n\nconst mostrarUsuario = () => ({\n  type: MOSTRAR_USUARIO\n});\n\nexport function mostrarCreaUsuariosAction() {\n  return dispatch => {\n    dispatch(mostrarCreaUsuario());\n  };\n}\n\nconst mostrarCreaUsuario = () => ({\n  type: MOSTRAR_CREA_USUARIO\n});\n\nexport function obtenerallUsers() {\n  return async dispatch => {\n    try {\n      const resultado = await clienteAxios.get('/api/users');\n      console.log(resultado.data);\n      dispatch(obtieneAllUsuarios(resultado.data));\n    } catch (error) {\n      console.log(error.response);\n    }\n  };\n}\n\nconst obtieneAllUsuarios = usuarios => ({\n  type: OBTIENE_ALL_USERS,\n  payload: usuarios\n});","map":{"version":3,"sources":["C:/Users/alexr/Desktop/reduxadminister/cliente/src/actions/userAction.js"],"names":["BEGIN_GET_USERDATA","GET_USERDATA_OK","GET_USERDATA_ERROR","COMIENZA_LOGIN","LOGIN_EXITOSO","LOGIN_ERROR","OCULTAR_ERROR","MOSTRAR_ERROR","MOSTRAR_USUARIO","MOSTRAR_CREA_USUARIO","OBTIENE_ALL_USERS","clienteAxios","tokenAuth","useDispatch","mostrarErrorAction","msg","categoria","alerta","dispatch","mostraError","type","payload","ocultarAlertAction","ocultarAlerta","loginUsuarioaction","datos","comienzaLogin","resultado","post","loginExitoso","data","obtieneUsuarioAction","error","console","log","response","token","localStorage","getItem","get","obtieneUsuario","mostrarUsuarioAction","mostrarUsuario","mostrarCreaUsuariosAction","mostrarCreaUsuario","obtenerallUsers","obtieneAllUsuarios","usuarios"],"mappings":"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","sourcesContent":["import {BEGIN_GET_USERDATA, \r\n        GET_USERDATA_OK, \r\n        GET_USERDATA_ERROR,\r\n        COMIENZA_LOGIN,\r\n        LOGIN_EXITOSO,\r\n        LOGIN_ERROR,\r\n        OCULTAR_ERROR,\r\n        MOSTRAR_ERROR,\r\n        MOSTRAR_USUARIO,\r\n        MOSTRAR_CREA_USUARIO,\r\n        OBTIENE_ALL_USERS\r\n} from '../types/index';\r\nimport clienteAxios from '../config/axios';\r\nimport tokenAuth from '../config/tokenAuth';\r\nimport {useDispatch} from 'react-redux';\r\n\r\nexport function mostrarErrorAction(msg, categoria){\r\n        const alerta = {\r\n\r\n                msg,\r\n                categoria                \r\n        }\r\n        return(dispatch)=>{\r\n\r\n                dispatch( mostraError(alerta) );               \r\n        }\r\n}\r\nconst mostraError = (alerta) => ({\r\n\r\n        type: MOSTRAR_ERROR,\r\n        payload: alerta\r\n})\r\n\r\nexport function ocultarAlertAction(){\r\n\r\n        return(dispatch)=>{\r\n\r\n                dispatch( ocultarAlerta() ); \r\n        }\r\n}\r\nconst ocultarAlerta = () => ({\r\n\r\n        type: OCULTAR_ERROR\r\n})\r\n\r\n\r\nexport function loginUsuarioaction(datos){\r\n\r\n        return async(dispatch)=>{\r\n                \r\n                dispatch( comienzaLogin() );\r\n                try {\r\n                        const resultado = await clienteAxios.post('/api/auth', datos);\r\n                        // console.log(resultado);\r\n                        dispatch( loginExitoso(resultado.data) );  \r\n                        dispatch( obtieneUsuarioAction() );    \r\n                } catch (error) {\r\n                        console.log(error.response)\r\n                }\r\n        }\r\n}\r\nconst comienzaLogin = () => ({\r\n\r\n        type: COMIENZA_LOGIN\r\n})\r\nconst loginExitoso = (token) => ({\r\n\r\n        type: LOGIN_EXITOSO,\r\n        payload: token\r\n})\r\nexport function obtieneUsuarioAction(){\r\n                const token = localStorage.getItem('token');\r\n                if(token){\r\n\r\n                        tokenAuth(token);\r\n                }\r\n        return async(dispatch)=>{\r\n                try {\r\n                        const resultado = await clienteAxios.get('/api/auth');\r\n                        dispatch( obtieneUsuario(resultado.data) );\r\n                } catch (error) {\r\n                        console.log(error.response)\r\n                }                \r\n        }\r\n}\r\nconst obtieneUsuario = (datos) => ({\r\n\r\n        type: GET_USERDATA_OK,\r\n        payload: datos\r\n})\r\n\r\nexport function mostrarUsuarioAction(){\r\n\r\n        return(dispatch)=>{\r\n\r\n                dispatch( mostrarUsuario() );\r\n\r\n        }\r\n}\r\nconst mostrarUsuario = () => ({\r\n\r\n        type: MOSTRAR_USUARIO\r\n})\r\nexport function mostrarCreaUsuariosAction(){\r\n\r\n        return(dispatch)=>{\r\n\r\n                dispatch(  mostrarCreaUsuario() );\r\n\r\n        }\r\n}\r\nconst mostrarCreaUsuario = () => ({\r\n\r\n        type: MOSTRAR_CREA_USUARIO\r\n})\r\n\r\nexport function obtenerallUsers(){\r\n\r\n\r\n        return async(dispatch)=>{\r\n\r\n                try {   \r\n                        const resultado = await clienteAxios.get('/api/users');\r\n                        console.log(resultado.data);\r\n                        dispatch( obtieneAllUsuarios(resultado.data) );\r\n                        \r\n                } catch (error) {\r\n                        console.log(error.response);\r\n                }\r\n        }\r\n}\r\nconst obtieneAllUsuarios = (usuarios) => ({\r\n\r\n        type: OBTIENE_ALL_USERS,\r\n        payload: usuarios\r\n        \r\n})"]},"metadata":{},"sourceType":"module"}